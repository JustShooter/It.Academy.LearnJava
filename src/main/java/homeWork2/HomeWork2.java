package homeWork2;

public class HomeWork2 {
    public byte b;		//Переменные класса
    public short s;		//Переменные класса
    public int i;		//Переменные класса
    public long l;		//Переменные класса
    public float f;		//Переменные класса
    public double d;	//Переменные класса

    public HomeWork2() {	//Конструктор класса, Можно сразу в конструкторе написать то же, что указано в методе setValue и передавать максимальные и минимальные значения в переменные класса при создании экземпляра класса
    }

    public void setValue (byte b, short s, int i, long l, float f, double d) {		//Метод присваивания значений
        this.b = b;		//Присваимаем переменной значение передаваемое из класса main
        this.s = s;		//Присваимаем переменной значение передаваемое из класса main
        this.i = i;		//Присваимаем переменной значение передаваемое из класса main
        this.l = l;		//Присваимаем переменной значение передаваемое из класса main
        this.f = f;		//Присваимаем переменной значение передаваемое из класса main
        this.d = d;		//Присваимаем переменной значение передаваемое из класса main
    }

    public void printAll () {		//Метод вывода всех значений в консоль
        System.out.println(b);		//Выводим значение переменной в консоль
        System.out.println(s);		//Выводим значение переменной в консоль
        System.out.println(i);		//Выводим значение переменной в консоль
        System.out.println(l);		//Выводим значение переменной в консоль
        System.out.println(f);		//Выводим значение переменной в консоль
        System.out.println(d);		//Выводим значение переменной в консоль
    }


    public void printInteger () {		//Метод вывода целочисленных значений в консоль
        System.out.println(b);		//Выводим значение переменной в консоль
        System.out.println(s);		//Выводим значение переменной в консоль
        System.out.println(i);		//Выводим значение переменной в консоль
        System.out.println(l);		//Выводим значение переменной в консоль
    }

    public void addOne () {		//Метод добавления 1 к целочисленным значениям
        ++b;		//Добавляем 1 к переменной
        ++s;		//Добавляем 1 к переменной
        ++i;		//Добавляем 1 к переменной
        ++l;		//Добавляем 1 к переменной
    }

    public void decOne () {		//Метод отнимания 1 от целочисленных значений
        --b;		//Отнимаем 1 от переменной
        --s;		//Отнимаем 1 от переменной
        --i;		//Отнимаем 1 от переменной
        --l;		//Отнимаем 1 от переменной
    }

    public static void main(String[] args) {
        HomeWork2 max_h1 = new HomeWork2();		//Создаём экземпляр класса с именем max_h1
        HomeWork2 min_h2 = new HomeWork2();		//Создаём экземпляр класса с именем min_h2
        max_h1.setValue(Byte.MAX_VALUE, Short.MAX_VALUE, Integer.MAX_VALUE, Long.MAX_VALUE, Float.MAX_VALUE, Double.MAX_VALUE);	//Через метод setValue передаём в экземпляр класса max_h1 максимальные значения каждого типа переменных
        min_h2.setValue(Byte.MIN_VALUE, Short.MIN_VALUE, Integer.MIN_VALUE, Long.MIN_VALUE, Float.MIN_VALUE, Double.MIN_VALUE);	//Через метод setValue передаём в экземпляр класса min_h2 минимальные значения каждого типа переменных
        max_h1.printAll();		//Через метод printAll выводим в консоль значения всех переменных класса с присвоиными им максимальными значениями в экземпляре класса с именем max_h1
        min_h2.printAll();		//Через метод printAll выводим в консоль значения всех переменных класса с присвоиными им минмальными значениями в экземпляре класса с именем min_h2
        max_h1.addOne();		//Применяем метод AddOne к экземпляру класса max_h1
        max_h1.printInteger();			//Выводим в консоль значения целочисленных переменных из экземпляра класса max_h1
        min_h2.decOne();		//Применяем метод DecOne к экземпляру класса min_h2
        min_h2.printInteger();			//Выводим в консоль значения целочисленных переменных из экземпляра класса min_h2
    }
}

